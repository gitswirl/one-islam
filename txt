import { NextRequest, NextResponse } from "next/server";
import { NextApiRequest } from "next";
import { readdir } from "fs/promises";
import { existsSync } from "fs";

export async function GET(
  req: Request,
  {
    params,
  }: {
    params: {
      slug: string[];
    };
  }
) {
  try {
    const [languageName, languageType] = params.slug;

    const editionFilesDir = await readdir("app/api/quran/edition");
    const isEditionFile = editionFilesDir.some((elem) => languageName == elem);
    const isEditionFileExt = existsSync(
      `app/api/quran/edition/${languageName}/${
        languageType ? `array_${languageType}.ts` : ""
      }`
    );

    console.log(
      `${languageName} exist? :`,
      isEditionFile,
      `${languageType} exist? :`,
      isEditionFileExt
    );

    if (!isEditionFile || !isEditionFileExt) {
      return NextResponse.json(
        {
          sucess: false,
          message: `No data available for the specified ${languageName} or ${languageType}.`,
        },
        { status: 404 }
      );
    } else {
      const filePath = await import(
        `@/app/api/quran/edition/${languageName}/array${
          languageType ? `_${languageType}` : ""
        }.ts`
      );

      return NextResponse.json(filePath.apiArray, { status: 200 });
    }
  } catch (error) {
    console.error("Server error:", error);
    return NextResponse.json(
      {
        message: "Internal Server Error. Please try again later.",
        error: error,
      },
      { status: 500 }
    );
  }
}
